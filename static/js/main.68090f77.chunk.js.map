{"version":3,"sources":["TodoItems.js","Footer.js","TodoList.js","App.js","index.js"],"names":["TodoItems","changeClassName","index","_this$props","_this","props","filter","items","done","_this2","this","react_default","a","createElement","className","map","item","key","id","type","onClick","toggleStatus","text","remove","React","Component","Footer","length","state","countActive","filterBy","clearCompleted","TodoList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","value","target","onSubmit","preventDefault","alert","newItem","Date","now","visibility","prevState","concat","copy","toConsumableArray","findIndex","element","objectSpread","forEach","doneItems","_this3","allDone","doneAll","placeholder","src_TodoItems","src_Footer","App","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.68090f77.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoItems extends React.Component {\n\n    changeClassName = (index) => {\n        const {filter, items} = this.props;\n        if (filter === 'active' && items[index].done) {\n            return 'active-done'\n        }\n        if (filter === 'completed' && !items[index].done) {\n            return 'completed-done'\n        }\n        if (items[index].done) {\n            return 'done';\n        }\n        return 'normal';\n    };\n\n    render() {\n        const {items} = this.props;\n        return (\n            <ul className='theList'>\n                {\n                    items.map((item, index) =>\n                        <li\n                            key={item.id}\n                            className={this.changeClassName(index)}\n                        >\n                            <button\n                                className={this.changeClassName(index)+ '-btn'}\n                                type='button'\n                                onClick={() => {\n                                this.props.toggleStatus(item.id);\n                            }}/>\n                            <label>{item.text}</label>\n                            <button\n                                className='remove'\n                                onClick={() => this.props.remove(item.id)}\n                            >✕</button>\n                        </li>\n                    )\n                }\n            </ul>\n        );\n    }\n}\n\nexport default TodoItems;","import React from 'react';\n\nclass Footer extends React.Component {\n\n    countActive() {\n        return this.props.items.filter(\n            (item) => item.done === false\n        ).length\n    }\n\n\n\n    render() {\n    const {items, state} = this.props;\n        return (\n            <footer className={items.length > 0 ? 'footer-active' : 'footer-disabled'}>\n                <div className='counter'>\n                    {this.countActive()} item left\n                </div>\n                <ul className='filters'>\n                    <li>\n                        <button\n                        className={state.filter === 'all' ? 'selected all' : null}\n                        onClick={() => {this.props.filterBy('all')}}\n                    >\n                            All\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            className={state.filter === 'active' ? 'selected active' : null}\n                            onClick={() => {this.props.filterBy('active')}}\n                    >\n                            Active\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                        className={state.filter === 'completed' ? 'selected completed' : null}\n                        onClick={() => {this.props.filterBy('completed')}}\n                    >\n                            Completed\n                        </button>\n                    </li>\n                </ul>\n                <button\n                    className='clear-completed'\n                    onClick={() => {this.props.clearCompleted()}}\n                >Clear completed</button>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport TodoItems from './TodoItems'\nimport Footer from \"./Footer\";\n\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            items: [],\n            filter: 'all'\n        };\n\n\n    }\n\n    onChange = (event) => {\n        this.setState({value:event.target.value})\n    };\n\n\n    onSubmit = (event) => {\n        if (this.state.value === '') {\n            event.preventDefault();\n            alert('Please, enter some task.')\n        } else {\n            event.preventDefault();\n\n            let newItem = {\n                text: this.state.value,\n                id: Date.now(),\n                done: false,\n                visibility: false\n            };\n\n            this.setState((prevState) => {\n                return {\n                    value: '',\n                    items: prevState.items.concat(newItem)\n                }\n            })\n        }\n    };\n\n    remove(id) {\n        const items = this.state.items.filter((item) => item.id !== id);\n        this.setState({\n            items\n        })\n    }\n\n    doneAll() {\n        let copy = [...this.state.items];\n        let doneArr = this.state.items.filter((item) => item.done);\n        if ( doneArr.length !== this.state.items.length)  {\n            this.state.items.forEach((element, index) => {\n\n                copy[index] = {\n                    ...this.state.items[index],\n                    done: true\n                };\n                this.setState({\n                    items: copy\n                })\n            })} else {\n            this.state.items.forEach((element, index) => {\n\n                copy[index] = {\n                    ...this.state.items[index],\n                    done: false\n                };\n                this.setState({\n                    items: copy\n                })\n        })}\n    };\n\n    toggleStatus = (id) => {\n        let copy;\n        if (this.state.filter === 'all') {\n            copy = [...this.state.items];\n        } else if (this.state.filter === 'active') {\n            copy = [...this.state.items];\n        }\n        let index = copy.findIndex((element) => {return element.id === id});\n        copy[index] = {\n            ...copy[index],\n            done: !copy[index].done,\n        };\n        this.setState({\n            items: copy\n        });\n    };\n\n    allDone() {\n        const doneItems = this.state.items.filter((item) => item.done);\n        return doneItems.length > 0 && doneItems.length === this.state.items.length;\n    }\n\n    filterBy(key) {\n        this.setState({\n            filter: key\n        })\n    }\n\n    clearCompleted() {\n        this.setState((prevState) => ({\n            items: prevState.items.filter((item) => !item.done)\n        }))\n    }\n\n    render () {\n        return (\n            <div className='toDoListMain'>\n                <div className='header'>\n                    <button\n                        className={this.allDone() ? 'arrow-btn-all-done' : 'arrow-btn'}\n                        onClick={() => this.doneAll()}\n                    >❯</button>\n                    <form onSubmit={this.onSubmit}>\n                        <input\n                            className='new-todo'\n                            placeholder='What needs to be done?'\n                            value={this.state.value}\n                            onChange={this.onChange}\n                        />\n                    </form>\n                </div>\n                <TodoItems\n                    toggleStatus={this.toggleStatus}\n                    remove={(index) => {this.remove(index)}}\n                    state={this.state}\n                    filter={this.state.filter}\n                    items={this.state.items}\n                />\n\n                <Footer\n                    filterBy={(key) => {this.filterBy(key)}}\n                    clearCompleted={() => {this.clearCompleted()}}\n                    state={this.state}\n                    items={this.state.items}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>todos</h1>\n        <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}