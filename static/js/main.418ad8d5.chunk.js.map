{"version":3,"sources":["TodoItems.js","Footer.js","AddingItem.js","App.js","index.js"],"names":["TodoItems","changeClassName","index","_this","props","sorting","items","stat","this","visibility","console","log","_this2","react_default","a","createElement","className","map","item","key","onDoubleClick","editItem","type","onClick","setStat","text","onSubmit","changeOnSubmit","doubleClickClassName","remove","React","Component","Footer","length","counter","forEach","element","footerClassName","countActive","allBtnClassName","sortByAll","activeBtnClassName","sortByActive","completedBtnClassName","sortByCompleted","clearCompleted","AddingItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","term","target","value","preventDefault","newItem","state","Date","now","prevState","concat","splice","_this3","i","_this4","arrowBtnAllDone","doneAll","placeholder","src_TodoItems","src_Footer","App","src_AddingItem","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.418ad8d5.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoItems extends React.Component {\n    props: TodoItems.props;\n\n    changeClassName = (index) => {\n        if(this.props.sorting === 'active' && this.props.items[index].stat === 'done') {\n            return 'active-done'\n        }\n        if(this.props.sorting === 'completed' && this.props.items[index].stat === null) {\n            return 'completed-done'\n        }\n        if (this.props.items[index].stat === 'done') {\n            return 'done'\n        } else {\n            return 'normal'\n        }\n    };\n\n    doubleClickClassName(index) {\n        if (this.props.items[index].visibility === 'visible') {\n            console.log(this.props.items[index].visibility);\n            return 'visible-input'\n        }\n        return 'hidden-input'\n    }\n\n    render() {\n        return (\n            <ul className='theList'>\n                {\n                    this.props.items.map((item, index) =>\n                        <li\n                            key={index}\n                            className={this.changeClassName(index)}\n                            onDoubleClick={() => this.props.editItem(index)}\n                        >\n                            <button\n                                className={this.changeClassName(index)+ '-btn'}\n                                type='checkbox'\n                                onClick={() => {\n                                this.props.setStat(index);\n                            }}/>\n                            <label>{item.text}</label>\n\n                            <input\n                                onSubmit={this.props.changeOnSubmit(index)}\n                                type=\"text\"\n                                className={this.doubleClickClassName(index)}\n\n                            />\n                            <button\n                                className='remove'\n                                onClick={() => this.props.remove(index)}\n                            >✕</button>\n                        </li>\n                    )\n                }\n            </ul>\n        );\n    }\n}\n\nexport default TodoItems;","import React from 'react';\n\nclass Footer extends React.Component {\n    props: Footer.props;\n\n    footerClassName() {\n        if (this.props.items.length > 0) {\n            return 'footer-active'\n        }\n        return 'footer-disabled'\n    }\n\n    allBtnClassName() {\n        if(this.props.sorting === \"all\") {\n            return 'selected all'\n        }\n        return 'all'\n    }\n\n    activeBtnClassName() {\n        if(this.props.sorting === \"active\") {\n            return 'selected active'\n        }\n        return 'active'\n    }\n    completedBtnClassName() {\n        if(this.props.sorting === \"completed\") {\n            return 'selected completed'\n        }\n        return 'completed'\n    }\n\n    countActive() {\n        let counter = 0;\n        this.props.items.forEach((element, index) => {\n\n            if (this.props.items[index].stat !== 'done') {\n                counter++\n            }\n        });\n\n\n        return counter;\n    }\n\n\n\n    render() {\n        return (\n            <footer className={this.footerClassName()}>\n                <div className='counter'>\n                    {this.countActive()} item left\n                </div>\n                <ul className='filters'>\n                    <li>\n                        <button\n                        className={this.allBtnClassName()}\n                        onClick={() => {this.props.sortByAll()}}\n                    >\n                            All\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            className={this.activeBtnClassName()}\n                            onClick={() => {this.props.sortByActive()}}\n                    >\n                            Active\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                        className={this.completedBtnClassName()}\n                        onClick={() => {this.props.sortByCompleted()}}\n                    >\n                            Completed\n                        </button>\n                    </li>\n                </ul>\n                <button\n                    className='clear-completed'\n                    onClick={() => {this.props.clearCompleted()}}\n                >Clear completed</button>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport TodoItems from './TodoItems'\nimport Footer from \"./Footer\";\n\nclass AddingItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: '',\n            items: [],\n            sorting: 'all'\n        };\n\n\n    }\n\n    onChange = (event) => {\n        this.setState({term:event.target.value})\n    };\n\n\n    onSubmit = (event) => {\n        event.preventDefault();\n\n        let newItem = {\n            text: this.state.term,\n            key: Date.now(),\n            stat: null,\n            visibility: null\n        };\n\n        this.setState((prevState) => {\n            return {\n                term: '',\n                items:prevState.items.concat(newItem)}\n        });\n    };\n\n    remove(index) {\n        this.state.items.splice(index, 1);\n        this.setState({\n            items: this.state.items\n        })\n    }\n\n    setStat(index) {\n        if (this.state.items[index].stat === 'done') {\n            let copy = this.state.items;\n            copy[index].stat = null;\n            this.setState({\n                items: this.state.items\n            })\n        } else {\n        let copy = this.state.items;\n        copy[index].stat = 'done';\n        this.setState({\n            items: this.state.items\n        })\n            }\n    }\n\n    doneAll() {\n            this.state.items.forEach((element, index) => {\n            if (this.state.items[index].stat === 'done') {\n                let copy = this.state.items;\n                copy[index].stat = null;\n                this.setState({\n                    items: this.state.items\n                })\n            } else {\n                let copy = this.state.items;\n                copy[index].stat = 'done';\n                this.setState({\n                    items: this.state.items\n                })\n            }\n            })\n    };\n\n    arrowBtnAllDone(counter) {\n        counter = 0;\n        this.state.items.forEach((element, index) => {\n\n            if (this.state.items[index].stat === 'done') {\n                counter++\n            }\n        });\n\n        if (this.state.items.length === 0) {\n            return 'arrow-btn'\n        }\n        if (counter === this.state.items.length) {\n            return 'arrow-btn-all-done'\n        }\n\n        return 'arrow-btn'\n    }\n\n    sortByAll() {\n        let copy = this.state;\n        copy.sorting = 'all';\n        this.setState({\n            sorting: this.state.sorting\n        })\n    }\n\n    sortByActive() {\n        let copy = this.state;\n        copy.sorting = 'active';\n        this.setState({\n            sorting: this.state.sorting\n        })\n    }\n\n    sortByCompleted() {\n        let copy = this.state;\n        copy.sorting = 'completed';\n        this.setState({\n            sorting: this.state.sorting\n        })\n    }\n\n\n\n    clearCompleted() {\n        for (let i = 0; i < this.state.items.length; i++) {\n            if(this.state.items[i].stat === 'done') {\n                this.state.items.splice(i, 1);\n                this.setState({\n                    items: this.state.items\n                });\n                i--;\n            }\n        }\n    }\n\n    editItem(index) {\n        console.log(this.state.items[index].visibility);\n        let copy = this.state.items;\n        copy[index].visibility = 'visible';\n        this.setState({\n            items: this.state.items\n        });\n        console.log(this.state.items[index].visibility);\n    }\n\n    changeOnSubmit(index) {\n\n    }\n\n    render () {\n        return (\n            <div className='toDoListMain'>\n                <div className='header'>\n                    <button\n                        className={this.arrowBtnAllDone()}\n                        onClick={() => this.doneAll()}\n                    >❯</button>\n                    <form onSubmit={this.onSubmit}>\n                        <input\n                            className='new-todo'\n                            placeholder='What needs to be done?'\n                            value={this.state.term}\n                            onChange={this.onChange}\n                        />\n                    </form>\n                </div>\n                <TodoItems\n                    setStat={(index) => {this.setStat(index)}}\n                    remove={(index) => {this.remove(index)}}\n                    items={this.state.items}\n                    sorting={this.state.sorting}\n                    editItem={(index) => {this.editItem(index)}}\n                    changeOnSubmit={(index) => this.changeOnSubmit(index)}\n                />\n\n                <Footer\n                    sortByAll={() => {this.sortByAll()}}\n                    sortByActive={() => {this.sortByActive()}}\n                    sortByCompleted={() => {this.sortByCompleted()}}\n                    clearCompleted={() => {this.clearCompleted()}}\n                    items={this.state.items}\n                    sorting={this.state.sorting}\n                    state={this.state}\n                />\n            </div>\n        );\n    }\n}\n\nexport default AddingItem;","import React from 'react';\nimport './App.css';\nimport AddingItem from './AddingItem'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>todos</h1>\n        <AddingItem />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}