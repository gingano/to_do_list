{"version":3,"sources":["TodoItems.js","Footer.js","AddingItem.js","App.js","index.js"],"names":["TodoItems","changeClassName","index","_this","props","items","stat","_this2","this","react_default","a","createElement","className","map","item","key","type","onClick","setStat","text","remove","React","Component","Footer","AddingItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","term","target","value","onSubmit","preventDefault","newItem","state","Date","now","prevState","concat","splice","forEach","element","arr","counter","_this3","length","_this4","arrowBtnAllDone","doneAll","placeholder","src_TodoItems","src_Footer","App","src_AddingItem","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b923b1c2.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoItems extends React.Component {\n    props: TodoItems.props;\n\n    changeClassName = (index) => {\n        if (this.props.items[index].stat === 'done') {\n            return 'done'\n        } else {\n            return 'normal'\n        }\n    };\n\n    render() {\n        return (\n            <ul className='theList'>\n                {\n                    this.props.items.map((item, index) =>\n                        <li\n                            key={index}\n                            className={this.changeClassName(index)}\n                        >\n                            <button\n                                className={this.changeClassName(index)+ '-btn'}\n                                type='checkbox'\n                                onClick={() => {\n                                this.props.setStat(index);\n                                // console.log('after btn' + this.props.state[index].stat);\n                            }}/>\n                            <label>{item.text}</label>\n                            <button\n                                className='remove'\n                                onClick={() => this.props.remove(index)}\n                            >✕</button>\n                        </li>\n                    )\n                }\n            </ul>\n        );\n    }\n}\n\nexport default TodoItems;","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <div className='counter'>\n                    hello\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport TodoItems from './TodoItems'\nimport Footer from \"./Footer\";\n\nclass AddingItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: '',\n            items: []\n        };\n\n\n    }\n\n    onChange = (event) => {\n        this.setState({term:event.target.value})\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n\n        let newItem = {\n            text: this.state.term,\n            key: Date.now(),\n            stat: null\n        };\n\n        this.setState((prevState) => {\n            return {\n                term: '',\n                items:prevState.items.concat(newItem)}\n        });\n    };\n\n    remove(index) {\n        this.state.items.splice(index, 1);\n        this.setState({\n            items: this.state.items\n        })\n    }\n\n    setStat(index) {\n        if (this.state.items[index].stat === 'done') {\n            let copy = this.state.items;\n            copy[index].stat = null;\n            this.setState({\n                items: this.state.items\n            })\n        } else {\n        let copy = this.state.items;\n        copy[index].stat = 'done';\n        this.setState({\n            items: this.state.items\n        })\n            }\n    }\n\n    doneAll() {\n            this.state.items.forEach((element, index, arr) => {\n            if (this.state.items[index].stat === 'done') {\n                let copy = this.state.items;\n                copy[index].stat = null;\n                this.setState({\n                    items: this.state.items\n                })\n            } else {\n                let copy = this.state.items;\n                copy[index].stat = 'done';\n                this.setState({\n                    items: this.state.items\n                })\n            }\n            })\n    };\n\n    arrowBtnAllDone(counter) {\n        counter = 0;\n        this.state.items.forEach((element, index, arr) => {\n\n            if (this.state.items[index].stat === 'done') {\n                counter++\n            }\n        });\n\n        if (this.state.items.length === 0) {\n            return 'arrow-btn'\n        }\n        if (counter === this.state.items.length) {\n            return 'arrow-btn-all-done'\n        }\n\n        return 'arrow-btn'\n    }\n\n    render () {\n        return (\n            <div className='toDoListMain'>\n                <div className='header'>\n                    <button\n                        className={this.arrowBtnAllDone()}\n                        onClick={() => this.doneAll()}\n                    >❯</button>\n                    <form onSubmit={this.onSubmit}>\n                        <input\n                            className='new-todo'\n                            placeholder='What needs to be done?'\n                            value={this.state.term}\n                            onChange={this.onChange}\n                        />\n                    </form>\n                </div>\n                <TodoItems\n                    setStat={(index) => {this.setStat(index)}}\n                    remove={(index) => {this.remove(index)}}\n                    items={this.state.items}\n                />\n\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default AddingItem;","import React from 'react';\nimport './App.css';\nimport AddingItem from './AddingItem'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>todos</h1>\n        <AddingItem />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}